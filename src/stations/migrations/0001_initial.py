# Generated by Django 4.1.5 on 2023-02-02 22:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RampRoutes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Stop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('desc', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('lat', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('lon', models.FloatField(blank=True, null=True)),
                ('location_type', models.IntegerField(choices=[(0, 'Stop or platform'), (1, 'Station'), (2, 'Entrance/Exit'), (3, 'Generic node'), (4, 'Boarding area'), (5, 'Area')])),
                ('level', models.IntegerField()),
                ('wheelchair_boarding', models.IntegerField(choices=[(0, 'No info'), (1, 'Yes, there is'), (2, 'No')], default=0)),
                ('visually_impaired_path', models.IntegerField(choices=[(0, 'No info for the stop'), (1, 'Yes'), (2, 'No'), (3, 'Only in some areas')], default=0)),
                ('platform_code', models.CharField(blank=True, max_length=20, null=True)),
                ('cardinal_direction', models.CharField(blank=True, choices=[('N', 'Nord'), ('E', 'East'), ('W', 'West'), ('S', 'South')], max_length=1, null=True)),
                ('step_free_route_information_available', models.BooleanField(default=False)),
                ('wifi', models.BooleanField(default=False)),
                ('blue_badge_car_parking', models.BooleanField(default=False)),
                ('blue_badge_car_park_spaces', models.BooleanField(default=False)),
                ('taxi_ranks_outside_station', models.BooleanField(default=False)),
                ('bus_stop_outside_station', models.BooleanField(default=False)),
                ('train_station', models.BooleanField(default=False)),
                ('accessible_entrance_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stations.stop')),
                ('accessible_exit_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stations.stop')),
                ('outside_station_unique_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stations.stop')),
                ('parent_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='stations.stop')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RampLevelPath',
            fields=[
                ('ramproutes_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='stations.ramproutes')),
            ],
            bases=('stations.ramproutes',),
        ),
        migrations.CreateModel(
            name='StepFreeInterchangeInfo',
            fields=[
                ('ramproutes_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='stations.ramproutes')),
                ('distance', models.IntegerField(blank=True, null=True)),
            ],
            bases=('stations.ramproutes',),
        ),
        migrations.AddField(
            model_name='ramproutes',
            name='from_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ramp_routes', to='stations.stop'),
        ),
        migrations.AddField(
            model_name='ramproutes',
            name='to_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stations.stop'),
        ),
        migrations.CreateModel(
            name='Lift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Lift'), (1, 'Stairlift'), (2, 'Stair'), (3, 'Escalator')])),
                ('name', models.CharField(max_length=100)),
                ('friendly_name', models.CharField(blank=True, max_length=100, null=True)),
                ('lift_width', models.FloatField()),
                ('lift_heigth', models.FloatField()),
                ('visually_impaired_ok', models.BooleanField(default=False)),
                ('assistance_requested', models.BooleanField(default=False)),
                ('number_of_steps', models.PositiveIntegerField(default=0)),
                ('steps_height', models.FloatField(default=0)),
                ('handrail', models.IntegerField(choices=[(0, 'no'), (1, 'right'), (2, 'left'), (3, 'both')], default=0)),
                ('handrail_height', models.FloatField(default=False)),
                ('lift_notes', models.TextField(blank=True, null=True)),
                ('steps', models.IntegerField(choices=[(0, 'No'), (1, 'tapis roulant')], default=0)),
                ('from_areas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stations.stop')),
                ('intermediate_areas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stations.stop')),
                ('intermediate_areas_two', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stations.stop')),
                ('stop_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lifts', to='stations.stop')),
                ('to_areas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='stations.stop')),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('platform_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='stations.stop')),
                ('min_gap', models.IntegerField(blank=True, null=True)),
                ('max_gap', models.IntegerField(blank=True, null=True)),
                ('avarage_gap', models.IntegerField(blank=True, null=True)),
                ('min_step', models.IntegerField(blank=True, null=True)),
                ('max_step', models.IntegerField(blank=True, null=True)),
                ('avarage_step', models.IntegerField(blank=True, null=True)),
                ('designated_level_acces_point', models.BooleanField(default=False)),
                ('level_access_by_manual_ramp', models.BooleanField(default=False)),
                ('additional_accessibility_info', models.TextField(blank=True, null=True)),
                ('location_of_level_access', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='stations.stop')),
            ],
        ),
    ]
